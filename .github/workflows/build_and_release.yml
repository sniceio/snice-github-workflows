name: "Build, Test & Release"

# As soon as a merge is accepted to main, we will build a new release.
# This assumes that main is protected and doesn't allow contributors to push
# directly to it but can only update it through pull-requests, which has
# proper validation etc before being accepted.
on:
  workflow_call:
    inputs:
      jdk_version:
        description: 'The JDK we should use when building'
        default: '11'
        required: false
        type: string
      jdk_distribution:
        description: 'The JDK distribution we should use when building'
        default: 'zulu'
        required: false
        type: string

jobs:

  build:
    name: "Build, Test & Release to Maven Central"
    runs-on: ubuntu-latest
    steps:

    - name: "Checkout sources"
      uses: actions/checkout@v3

    - name: Set up JDK ${{ inputs.jdk_version }} using distribution ${{ inputs.jdk_distribution }} 
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.jdk_version }}
        distribution: ${{ inputs.jdk_distribution }}
        server-id: ossrh
        server-username: OSSRH_USERNAME
        server-password: OSSRH_PASSWORD
        gpg-passphrase: GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        cache: 'maven'

    # Note that this will actually also build and test so that's why we don't do it
    # in a separate step as often seen in other examples.
    - name: "Publish to the Maven Central Repository"
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
        mvn -B release:prepare release:perform -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN -P release
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME}}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD}}
        GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
